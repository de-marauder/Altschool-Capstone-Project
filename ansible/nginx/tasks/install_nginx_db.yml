---
################################################################################
# Replace later
################################################################################
# - name: Add a user to a password file and ensure permissions are set
#   community.general.htpasswd:
#     path: /srv/nginx/.htpasswd
#     name: "{{ htaccessusr }}"
#     password: '{{ htaccesspwd }}'
#     mode: a+r
#   tags:
#   - db
#   - monitor
################################################################################


- name: Copy the db nginx configuration
  template:
    src: nginx/db_nginx.conf
    dest: /srv/nginx/nginx.conf
  tags:
    - db
    - nginx-db

# Reverse proxy
- name: Deploy nginx on dbs
  docker_container:
    image: nginx:1.23.1-alpine
    name: nginx
    restart_policy: always
    restart: yes
    recreate: yes
    networks:
      - name: monitoring
      - name: db
    ports:
      - "80:80"
      - "443:443"
      - "9100:9100"
      - "9323:9323"
      - "9324:9324"
    mounts: type=bind
      source=/srv/nginx
      target=/etc/nginx
  tags:
    - db
    - nginx-db

# - name: Grant SSL certs inside nginx Docker container for dbs
#   shell: |
#     docker exec -i nginx sh -c '
#     apk update
#     apk add certbot-nginx
#     certbot --{{ certbot_plugin }} -d  {{ item }} -m {{ certbot_mail_address }} --agree-tos --noninteractive --redirect
#     '
#   run_once: true
#   loop: "{{ certbot_db_site_names }}"
#   tags:
#     - db
#   vars:
#     ansible_python_interpreter: "{{ ansible_playbook_python }}"
#     docker_command: "docker exec -i nginx sh"
