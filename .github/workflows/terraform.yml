name: Terraform CI-CD, Build Docker Image and Push

on:
  push:
    branches:
      - main
    paths:
      - Infrastructure/**
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  #TERRAFORM
  TF_CLOUD_ORGANIZATION: "group23"
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  TF_WORKSPACE: "group23"
  TF_ACTION_WORKING_DIR: "Infrastructure"
  #AWS
  AWS_REGION: "eu-west-2"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_KEY_PAIR: ${{ secrets.AWS_KEY_PAIR }}
  
permissions:
  contents: read
  pull-requests: write

  #GITHUB
  #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #############################################
  #                                           #
  #             TERRAFORM                     #
  #                                           #
  #############################################
jobs:
  terraform-setup:
    name: Terraform CI-CD
    runs-on: ubuntu-latest

    #defaults:
    # run:
    # shell: bash

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ env.AWS_KEY_PAIR }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          #cli_config_credentials_token: ${{ env.TF_API_TOKEN }}
          terraform_version: 1.1.9
          terraform_wrapper: false

      - name: Install Terraform
        uses: little-core-labs/install-terraform@v2.0.0
        with:
          #cli_config_credentials_token: ${{ env.TF_API_TOKEN }}
          version: 0.13.4

      - name: Confirm Install
        run: terraform -v

      #terraform init
      - name: Terraform Init
        id: init
        run: terraform init
        #uses: hashicorp/terraform-github-actions/init@v0.4.0
        env:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
        working-directory: ${{ env.TF_ACTION_WORKING_DIR }}
        shell:
          bash
          #run: terraform init -input=false

      #initiate terraform to run
      #- name: Create Plan Run
      # uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
      # id: plan-run
      # with:
      #  workspace: ${{ env.TF_WORKSPACE }}
      #  configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
      #  plan_only: true
      #terraform plan
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -no-color -out tf.plan
        # uses: hashicorp/terraform-github-actions/plan@v0.14.0
        env:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        working-directory: ${{ env.TF_ACTION_WORKING_DIR }}
          #run: terraform plan -input=false
        #with:
        #version: 0.13.4

      #initiate terraform to apply
      #   - name: 'Create Terraform Apply'
      #     uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
      #    id: apply-run
      #    with:
      #     workspace: ${{ env.TF_WORKSPACE }}
      #     configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}

      #terraform show
      - name: Terraform Show
        id: show
        run: terraform show -no-color tf.plan 2>&1 > /tmp/plan.txt
        working-directory: ${{ env.TF_ACTION_WORKING_DIR }}
        env:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
        shell: bash

      #terraform apply
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -input=false tf.plan
        # uses: hashicorp/terraform-github-actions/apply@v0.14.0
        env:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
        working-directory: ${{ env.TF_ACTION_WORKING_DIR }}
        shell:
          bash
          #run: terraform apply -auto-approve -input=false
        #with:
        #version: 0.13.4
        # auto_approve: true
# - name: Terraform Apply
#   run: |
#     terraform init
#     terraform plan
#     terraform apply -auto-approve
